// Generated by LiveScript 1.6.0
(function(){
  var Bmg, restrict, one, suppliers, result;
  Bmg = require('../dist/bmg.cjs');
  restrict = curry$(function(predicate, relation){
    return Bmg.restrict(relation, predicate);
  });
  one = function(relation){
    return relation.one();
  };
  suppliers = Bmg.Bmg([
    {
      sid: 'S1',
      name: 'Smith'
    }, {
      sid: 'S2',
      name: 'Jones'
    }
  ]);
  result = one(
  restrict({
    sid: 'S2'
  })(
  suppliers));
  console.log(result);
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
